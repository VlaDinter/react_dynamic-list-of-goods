{"version":3,"sources":["api.ts","components/Good/Good.tsx","components/GoodsList/GoodsList.tsx","components/Error/Error.tsx","App.tsx","index.tsx"],"names":["getGoods","fetch","then","response","json","data","Good","good","className","style","color","name","GoodsList","goods","map","key","id","Error","App","state","isLoadingError","offLoadingError","setState","loadGoods","catch","loadFiveGoods","sort","good1","good2","localeCompare","filter","_","index","loadRedGoods","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAMeA,EANE,WACf,OAAOC,MAAM,2CACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,SCShBC,EANe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC/B,OACE,wBAAIC,UAAU,YAAYC,MAAO,CAAEC,MAAOH,EAAKG,QAAUH,EAAKI,OCQnDC,EARoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,OACE,wBAAIL,UAAU,aACXK,EAAMC,KAAI,SAAAP,GAAI,OAAI,kBAAC,EAAD,CAAMQ,IAAKR,EAAKS,GAAIT,KAAMA,SCHpCU,EANS,WACtB,OACE,uBAAGT,UAAU,cAAb,cC4FWU,G,kNAnFbC,MAAQ,CACNN,MAAO,GACPO,gBAAgB,G,EAGlBC,gBAAkB,WAChB,EAAKC,SAAS,CACZF,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKF,kBAELrB,IACGE,MAAK,SAAAW,GAAK,OAAI,EAAKS,SAAS,CAC3BT,aAEDW,OAAM,kBAAM,EAAKF,SAAS,CACzBF,gBAAgB,Q,EAItBK,cAAgB,WACd,EAAKJ,kBAELrB,IACGE,MAAK,SAAAW,GACJA,EAAMa,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMhB,KAAKkB,cAAcD,EAAMjB,SAE5D,EAAKW,SAAS,CACZT,MAAOA,EAAMiB,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,UAG7CR,OAAM,kBAAM,EAAKF,SAAS,CACzBF,gBAAgB,Q,EAItBa,aAAe,WACb,EAAKZ,kBAELrB,IACGE,MAAK,SAAAW,GAAK,OAAI,EAAKS,SAAS,CAC3BT,MAAOA,EAAMiB,QAAO,SAAAvB,GAAI,MAAmB,QAAfA,EAAKG,cAElCc,OAAM,kBAAM,EAAKF,SAAS,CACzBF,gBAAgB,Q,uDAKpB,OACE,oCACE,wBAAIZ,UAAU,eAAd,yBACA,kBAAC,EAAD,CAAWK,MAAOqB,KAAKf,MAAMN,QAC5BqB,KAAKf,MAAMC,gBAAkB,kBAAC,EAAD,MAC9B,4BACEZ,UAAU,cACV2B,KAAK,SACLC,QAASF,KAAKX,WAHhB,kBAOA,4BACEf,UAAU,cACV2B,KAAK,SACLC,QAASF,KAAKT,eAHhB,sBAOA,4BACEjB,UAAU,cACV2B,KAAK,SACLC,QAASF,KAAKD,cAHhB,uB,GAxEUI,IAAMC,YCPxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.20365f53.chunk.js","sourcesContent":["const getGoods = (): Promise<Good[]> => {\n  return fetch('https://mate.academy/students-api/goods')\n    .then(response => response.json())\n    .then(response => response.data);\n};\n\nexport default getGoods;\n","import React from 'react';\n\ninterface Props {\n  good: Good;\n}\n\nconst Good: React.FC<Props> = ({ good }) => {\n  return (\n    <li className=\"app__item\" style={{ color: good.color }}>{good.name}</li>\n  );\n};\n\nexport default Good;\n","import React from 'react';\n\nimport Good from '../Good/Good';\n\ninterface Props {\n  goods: Good[];\n}\n\nconst GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"app__list\">\n      {goods.map(good => <Good key={good.id} good={good} />)}\n    </ul>\n  );\n};\n\nexport default GoodsList;\n","import React from 'react';\n\nconst Error: React.FC = () => {\n  return (\n    <p className=\"app__error\">Try again</p>\n  );\n};\n\nexport default Error;\n","import React from 'react';\n\nimport getGoods from './api';\nimport GoodsList from './components/GoodsList/GoodsList';\nimport Error from './components/Error/Error';\nimport './App.css';\n\ninterface State {\n  goods: Good[];\n  isLoadingError: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    isLoadingError: false,\n  };\n\n  offLoadingError = () => {\n    this.setState({\n      isLoadingError: false,\n    });\n  };\n\n  loadGoods = () => {\n    this.offLoadingError();\n\n    getGoods()\n      .then(goods => this.setState({\n        goods,\n      }))\n      .catch(() => this.setState({\n        isLoadingError: true,\n      }));\n  };\n\n  loadFiveGoods = () => {\n    this.offLoadingError();\n\n    getGoods()\n      .then(goods => {\n        goods.sort((good1, good2) => good1.name.localeCompare(good2.name));\n\n        this.setState({\n          goods: goods.filter((_, index) => index < 5),\n        });\n      })\n      .catch(() => this.setState({\n        isLoadingError: true,\n      }));\n  };\n\n  loadRedGoods = () => {\n    this.offLoadingError();\n\n    getGoods()\n      .then(goods => this.setState({\n        goods: goods.filter(good => good.color === 'red'),\n      }))\n      .catch(() => this.setState({\n        isLoadingError: true,\n      }));\n  };\n\n  render() {\n    return (\n      <>\n        <h1 className=\"app__header\">Dynamic list of Goods</h1>\n        <GoodsList goods={this.state.goods} />\n        {this.state.isLoadingError && <Error />}\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.loadGoods}\n        >\n          Load All goods\n        </button>\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.loadFiveGoods}\n        >\n          Load 5 first goods\n        </button>\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.loadRedGoods}\n        >\n          Load red goods\n        </button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}